{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Udemy\\\\React\\\\NextJsProject\\\\06-onwards-to-a-bigger-project-starting-project\\\\pages\\\\[meetupId]\\\\index.js\";\n// import { Fragment } from \"react\";\nimport { Fragment } from 'react';\nimport Head from 'next/head';\nimport { MongoClient, ObjectId } from 'mongodb';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: props.meetupdata.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: props.meetupdata.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: props.meetupdata.image,\n      title: props.meetupdata.title,\n      address: props.meetupdata.address,\n      description: props.meetupdata.description // image='https://upload.wikimedia.org/wikipedia/commons/d/d3/Stadtbild_M%C3%BCnchen.jpg'\n      // title='A First Meetup'\n      // address='Some address 5, 12345 Munich'\n      // description='The meetup description'\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this) // <Fragment>\n  //   <img\n  //     src=\"https://upload.wikimedia.org/wikipedia/commons/d/d3/Stadtbild_M%C3%BCnchen.jpg\"\n  //     alt=\"A First Meetup\"\n  //   />\n  //   <h1>A First Meetup</h1>\n  //   <address>Some address 5, 12345 Munich</address>\n  //   <p>The meetup description</p>\n  // </Fragment>\n  ;\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://Testing:wGgNttIL55RkP8G0@cluster0.ixose.mongodb.net/?retryWrites=true&w=majority'); // console.log('client: ' + client);\n\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    })) // [\n    //   {\n    //     params: {\n    //       meetupId: 'm1',\n    //     },\n    //   },\n    //   {\n    //     params: {\n    //       meetupId: 'm2',\n    //     },\n    //   },\n    // ],\n\n  };\n}\nexport async function getStaticProps(context) {\n  // fetch data for a single meetup\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect('mongodb+srv://Testing:wGgNttIL55RkP8G0@cluster0.ixose.mongodb.net/?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId)\n  }); // const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\n\n  client.close();\n  console.log(meetupId);\n  return {\n    props: {\n      meetupdata: {\n        id: selectedMeetup._id.toString(),\n        title: selectedMeetup.data.title,\n        address: selectedMeetup.data.address,\n        image: selectedMeetup.data.image,\n        description: selectedMeetup.data.description\n      } // meetupData: {\n      //   image:\n      //     'https://upload.wikimedia.org/wikipedia/commons/d/d3/Stadtbild_M%C3%BCnchen.jpg',\n      //   id: meetupId,\n      //   title: 'A First Meetup',\n      //   address: 'Some address 5, 12345 Munich',\n      //   description: 'The meetup description',\n      // },\n\n    },\n    revalidate: 10 //re pre-generated page on server every 10 seconds\n\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["C:/Udemy/React/NextJsProject/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["Fragment","Head","MongoClient","ObjectId","MeetupDetail","MeetupDetails","props","meetupdata","title","description","image","address","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","selectedMeetup","findOne","console","log","id","data","revalidate"],"mappings":"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","sourcesContent":["// import { Fragment } from \"react\";\r\nimport { Fragment } from 'react';\r\nimport Head from 'next/head';\r\nimport { MongoClient, ObjectId } from 'mongodb';\r\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\r\n\r\nfunction MeetupDetails(props) {\r\n  return (\r\n    <Fragment>\r\n      <Head>\r\n        <title>{props.meetupdata.title}</title>\r\n        <meta name='description' content={props.meetupdata.description} />\r\n      </Head>\r\n      <MeetupDetail\r\n        image={props.meetupdata.image}\r\n        title={props.meetupdata.title}\r\n        address={props.meetupdata.address}\r\n        description={props.meetupdata.description}\r\n        // image='https://upload.wikimedia.org/wikipedia/commons/d/d3/Stadtbild_M%C3%BCnchen.jpg'\r\n        // title='A First Meetup'\r\n        // address='Some address 5, 12345 Munich'\r\n        // description='The meetup description'\r\n      />\r\n    </Fragment>\r\n    // <Fragment>\r\n    //   <img\r\n    //     src=\"https://upload.wikimedia.org/wikipedia/commons/d/d3/Stadtbild_M%C3%BCnchen.jpg\"\r\n    //     alt=\"A First Meetup\"\r\n    //   />\r\n    //   <h1>A First Meetup</h1>\r\n    //   <address>Some address 5, 12345 Munich</address>\r\n    //   <p>The meetup description</p>\r\n    // </Fragment>\r\n  );\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(\r\n    'mongodb+srv://Testing:wGgNttIL55RkP8G0@cluster0.ixose.mongodb.net/?retryWrites=true&w=majority'\r\n  );\r\n\r\n  // console.log('client: ' + client);\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection('meetups');\r\n\r\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n\r\n  client.close();\r\n\r\n  return {\r\n    fallback: false,\r\n\r\n    paths: meetups.map((meetup) => ({\r\n      params: { meetupId: meetup._id.toString() },\r\n    })),\r\n\r\n    // [\r\n    //   {\r\n    //     params: {\r\n    //       meetupId: 'm1',\r\n    //     },\r\n    //   },\r\n\r\n    //   {\r\n    //     params: {\r\n    //       meetupId: 'm2',\r\n    //     },\r\n    //   },\r\n    // ],\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  // fetch data for a single meetup\r\n  const meetupId = context.params.meetupId;\r\n\r\n  const client = await MongoClient.connect(\r\n    'mongodb+srv://Testing:wGgNttIL55RkP8G0@cluster0.ixose.mongodb.net/?retryWrites=true&w=majority'\r\n  );\r\n\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection('meetups');\r\n\r\n  const selectedMeetup = await meetupsCollection.findOne({\r\n    _id: ObjectId(meetupId),\r\n  });\r\n  // const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n\r\n  client.close();\r\n\r\n  console.log(meetupId);\r\n  return {\r\n    props: {\r\n      meetupdata: {\r\n        id: selectedMeetup._id.toString(),\r\n        title: selectedMeetup.data.title,\r\n        address: selectedMeetup.data.address,\r\n        image: selectedMeetup.data.image,\r\n        description: selectedMeetup.data.description,\r\n      },\r\n      // meetupData: {\r\n      //   image:\r\n      //     'https://upload.wikimedia.org/wikipedia/commons/d/d3/Stadtbild_M%C3%BCnchen.jpg',\r\n      //   id: meetupId,\r\n      //   title: 'A First Meetup',\r\n      //   address: 'Some address 5, 12345 Munich',\r\n      //   description: 'The meetup description',\r\n      // },\r\n    },\r\n    revalidate: 10, //re pre-generated page on server every 10 seconds\r\n  };\r\n}\r\n\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}